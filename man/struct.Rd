% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standalone-struct-list.R
\name{struct}
\alias{struct}
\alias{is.struct}
\alias{as.struct}
\alias{as.list.struct}
\alias{is.struct_list}
\title{Create a structure.}
\usage{
struct(..., .class = NULL, .attr = list())

is.struct(x, .class = NULL)

as.struct(x, .class)

\method{as.list}{struct}(x, ...)

is.struct_list(x, .class = NULL)
}
\arguments{
\item{...}{a set of named values to use in the structure. or an unnamed list
of `struct`s of the same type}

\item{.class}{the class of the nested list}

\item{.attr}{attributes to assign to the structure}
}
\value{
Usually a length one `struct_list` with a single `struct` item with class `.class`
  and attributes `.attr`. If a list of `struct`s is provided then it will be
  longer than 1.
}
\description{
Create a structure.
}
\section{Methods (by generic)}{
\itemize{
\item \code{as.list(struct)}: Make `struct` into plain list

}}
\section{Functions}{
\itemize{
\item \code{is.struct()}: Check is a `struct`

\item \code{as.struct()}: Cast to a `struct`

\item \code{is.struct_list()}: is a list of `structs`?

}}
\examples{
x = struct(a=1,b=2,c=1:3,.class="test")
format.test = function(x,...) {sprintf("\"\%d/\%d [\%d-\%d]\"", x$a, x$b, min(x$c), max(x$c))}
x # is a struct_list of length 1
x[[1]] # is a struct of length 1

# e = struct(.class="test")
try(struct())

x =
  struct(
    struct(a=1,b=2,c=1:3,.class="test"),
    struct(a=2,b=3,c=4:5,.class="test")
  )

tmp = lapply(1:10, function(x) struct(a=x,b=3,c=4:5,.class="test"))
struct(tmp)

}
\concept{structures}
\keyword{internal}
