% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standalone-struct-list.R
\name{subset-struct-list}
\alias{subset-struct-list}
\alias{c.struct_list}
\alias{rep.struct_list}
\alias{$.struct_list}
\alias{[.struct_list}
\alias{[<-.struct_list}
\alias{[[.struct_list}
\alias{[[<-.struct_list}
\title{Manipulate structured lists}
\usage{
\method{c}{struct_list}(...)

\method{rep}{struct_list}(x, ...)

\method{$}{struct_list}(x, y)

\method{[}{struct_list}(x, ...)

\method{[}{struct_list}(x, ...) <- value

\method{[[}{struct_list}(x, ...)

\method{[[}{struct_list}(x, ...) <- value
}
\arguments{
\item{...}{generic support}

\item{x}{a `struct_list`}

\item{y}{item to retrieve}

\item{value}{the value}
}
\value{
a `struct_list` with all the items
}
\description{
These functions allow generic list behaviour.
}
\section{Functions}{
\itemize{
\item \code{c(struct_list)}: Repeat a `struct_list`

\item \code{rep(struct_list)}: Repeat a `struct_list`

\item \code{$}: Subset a `struct_list`

\item \code{[}: Subset a `struct_list`

\item \code{`[`(struct_list) <- value}: Assign a subset to a `struct_list`

\item \code{[[}: get a value from a `struct_list`

\item \code{`[[`(struct_list) <- value}: set a single value in a `struct_list`

}}
\examples{

x = struct(a=1,b=2,c=1:3,.class="test")
y = struct(a=4,b=5,c=1:3,.class="test")
z= tibble::tibble(a= 1:10, b=rep(c(x,y),5))

z$b

c(x,y)
c(rep(x,5),y)
class(c(rep(x,5),rep(y,5))[[1]])

as.struct_list(list(x,y))

#' x = struct(a=1,b=2,c=1:3,.class="test")
class(rep(c(x,y),5)[[1]]) == "test"
class(rep(x,5))

a = (rep(c(x,y),5))
a[[1]] = y
a

}
\concept{structures}
