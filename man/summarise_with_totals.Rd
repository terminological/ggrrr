% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy-utils.R
\name{summarise_with_totals}
\alias{summarise_with_totals}
\title{Summarise a subgroup and create a summary row}
\usage{
summarise_with_totals(
  .data,
  ...,
  .groups = NULL,
  .total = "Total",
  .total_first = FALSE
)
}
\arguments{
\item{.data}{a dataframe}

\item{...}{the summarisation specification}

\item{.groups}{what to do with the grouping after summarisation (same as dplyr::summarise)}

\item{.total}{name of the total row which will be added into a factor list.}

\item{.total_first}{should the total be before or after the groups}
}
\value{
a summarised dataframe with the additional totals or group row
}
\description{
Summarise and include a total row, or a row including the summary for the whole group, into a factor list.
This looks and feels like a natural summarisation step, but applies the summarisation both to the
subgroups and to the data ungrouped by one level. The additional group result is included as a new row.
allows for a natural grouped and ungrouped summarisation
}
\examples{
library(tidyverse)
diamonds \%>\%
 dplyr::group_by(color,cut) \%>\%
 summarise_with_totals(
    mpg = sprintf("\%1.1f \u00B1 \%1.1f", mean(price), sd(price)),
    .total = "Overall"
 )
}
